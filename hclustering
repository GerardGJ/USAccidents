library(StatMatch)
library(cluster)
library(NbClust)
install.packages("vegan")
library(vegan)


# Clear plots
if(!is.null(dev.list())) dev.off()

# Clean workspace
rm(list=ls())

setwd("/Users/ander.barrio/Desktop/MVA-Project")
dd <- read.csv("USAccidents_final_dataset.csv", sep=",",dec=".",stringsAsFactors = TRUE)
names(dd)
dim(dd)
summary(dd)


set.seed(12345)
dds <- dd[sample(nrow(dd), 10000), ]


severity <- dds$Severity
id <- dds$ID
state <- dds$State
city <- dds$City
start <- dds$Start_Time
end <- dds$End_Time

drop <- names(dds) %in% c("ID","State","City","Severity","Start_Time", "End_Time") #we discard this variables
dds <- dds[,!drop]
dim(dds)

# HIERARCHICAL CLUSTERING
#d <- gower.dist(dds) #gower
daisy <- daisy(dds, metric = "gower")
#daisy[1:5]
daisy <- daisy^2
daisy[1:5]

h1 <- hclust(daisy,method="ward.D") #ward
plot(h1)

###### Selection of K with quality clustering KPIs by using NbClust

indices <- c("cindex","silhouette","dunn")

particiones <- vector()
for(i in 1:length(indices)){
  print(indices[i])
  sel_k<-NbClust(data = NULL,diss=daisy,distance=NULL,min.nc=2,max.nc=6,method="ward.D2",index=indices[i])
  particiones[i]<-max(sel_k$Best.partition)
}

names(particiones) <- indices
particiones #we select k = 5

#Labelling of Clustering Results
# Decision on k=5 (just for final-user requirements)
k <- 5
cut_k <- cutree(h1,k)
cut_k

###### Selection of K by using silhoutte
sil = silhouette (cut_k,daisy) # or use your cluster vector
#windows() # RStudio sometimes does not display silhouette plots correctly
#plot(sil)

pdf('silhouttes.pdf')
plot(sil)
dev.off()

table(cut_k)
